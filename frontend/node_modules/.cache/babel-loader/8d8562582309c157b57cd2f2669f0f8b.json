{"ast":null,"code":"/*\n\nimport React, {Component} from \"react\"\nimport Main from \"../templates/Main\"\nimport Axios from \"axios\"\n\nconst HeaderProps = {\n    icon: \"users\",\n    title: \"Usu치rios\",\n    subtitle: \"Cadastro de usu치rios: Incluir, Listar, Alterar e Excluir\"\n}\n\nconst BaseUrl = \"http://localhost:3001/users\"\nconst InitialState = {\n    User: {Name: \"\", Email: \"\"},\n    List: []\n}\n\nexport default class UserCrud extends Component {\n    \n    state = {...InitialState}\n    \n    clear() {\n        this.setState({  User: InitialState.User  })\n    }\n\n    save() {\n        const User = this.state.User\n\n        const Method = User.id ? \"put\" : \"post\"\n        const URL = User.id ? `${BaseUrl}/${User.id}` : BaseUrl\n\n        Axios[Method](URL, User)\n            .then(Response => {\n                const List = this.getUpdatedList(Response.Data)\n                this.setState({User: InitialState.User, List})\n            })\n\n    }\n\n    getUpdatedList(User) {\n\n        const List = this.state.List.filter(u => u.id !== User.id)\n        List.unshift(User)\n        return List\n\n    }\n\n    updateField(Event) {\n\n        const User = {...this.state.User}\n        User[Event.target.Name] = Event.target.value\n        this.setState({ User})\n\n    }\n\n    renderForm() {\n        return (\n            <div className=\"form\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-6\">\n                        <div className=\"form-group\">\n                            <label>Nome</label>\n                            <input type=\"text\" className=\"form-control\"\n                                Name=\"Name\"\n                                value={this.state.User.Name}\n                                onChange={Event => this.updateField(Event)}\n                                placeholder=\"Digite o nome\"/>\n                        </div>\n                    </div>\n                    <div className=\"col-12 col-md-6\">\n                        <div className=\"form-group\">\n                            <label>Email</label>\n                            <input type=\"text\" className=\"form-control\"\n                                Name=\"Email\"\n                                value={this.state.User.Email}\n                                onChange={Event => this.updateField(Event)}\n                                placeholder=\"Digite o e-mail\"/>\n                        </div>\n                    </div>\n                </div>\n                <hr />\n                <div className=\"row\">\n                    <div className=\"col-12 d-flex justfy-content-end\">\n                        <button className=\"btn btn-primary\" onClick={Event => this.save(Event)}>\n                            Salvar\n                        </button>\n                        <button className=\"btn btn-secondary ml-2\" onClick={Event => this.clear(Event)}>\n                            Cancelar\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n\n    }\n\n    render(){\n        return(\n            <Main {...HeaderProps }>\n                {this.renderForm()}\n            </Main>\n        )\n    }\n}\n\n*/","map":{"version":3,"sources":["/home/icaro/Documentos/Javascript/Algoritmos/Cadastro-De-Usuarios/frontend/src/components/User/UserCrud.jsx"],"names":[],"mappings":"AAAA","sourcesContent":["/*\n\nimport React, {Component} from \"react\"\nimport Main from \"../templates/Main\"\nimport Axios from \"axios\"\n\nconst HeaderProps = {\n    icon: \"users\",\n    title: \"Usu치rios\",\n    subtitle: \"Cadastro de usu치rios: Incluir, Listar, Alterar e Excluir\"\n}\n\nconst BaseUrl = \"http://localhost:3001/users\"\nconst InitialState = {\n    User: {Name: \"\", Email: \"\"},\n    List: []\n}\n\nexport default class UserCrud extends Component {\n    \n    state = {...InitialState}\n    \n    clear() {\n        this.setState({  User: InitialState.User  })\n    }\n\n    save() {\n        const User = this.state.User\n\n        const Method = User.id ? \"put\" : \"post\"\n        const URL = User.id ? `${BaseUrl}/${User.id}` : BaseUrl\n\n        Axios[Method](URL, User)\n            .then(Response => {\n                const List = this.getUpdatedList(Response.Data)\n                this.setState({User: InitialState.User, List})\n            })\n\n    }\n\n    getUpdatedList(User) {\n\n        const List = this.state.List.filter(u => u.id !== User.id)\n        List.unshift(User)\n        return List\n\n    }\n\n    updateField(Event) {\n\n        const User = {...this.state.User}\n        User[Event.target.Name] = Event.target.value\n        this.setState({ User})\n\n    }\n\n    renderForm() {\n        return (\n            <div className=\"form\">\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-6\">\n                        <div className=\"form-group\">\n                            <label>Nome</label>\n                            <input type=\"text\" className=\"form-control\"\n                                Name=\"Name\"\n                                value={this.state.User.Name}\n                                onChange={Event => this.updateField(Event)}\n                                placeholder=\"Digite o nome\"/>\n                        </div>\n                    </div>\n                    <div className=\"col-12 col-md-6\">\n                        <div className=\"form-group\">\n                            <label>Email</label>\n                            <input type=\"text\" className=\"form-control\"\n                                Name=\"Email\"\n                                value={this.state.User.Email}\n                                onChange={Event => this.updateField(Event)}\n                                placeholder=\"Digite o e-mail\"/>\n                        </div>\n                    </div>\n                </div>\n                <hr />\n                <div className=\"row\">\n                    <div className=\"col-12 d-flex justfy-content-end\">\n                        <button className=\"btn btn-primary\" onClick={Event => this.save(Event)}>\n                            Salvar\n                        </button>\n                        <button className=\"btn btn-secondary ml-2\" onClick={Event => this.clear(Event)}>\n                            Cancelar\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n\n    }\n\n    render(){\n        return(\n            <Main {...HeaderProps }>\n                {this.renderForm()}\n            </Main>\n        )\n    }\n}\n\n*/"]},"metadata":{},"sourceType":"module"}